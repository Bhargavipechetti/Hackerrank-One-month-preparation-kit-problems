/** Dog Inheritance 1 **/

import java.io.*;
import java.util.*;

  
class Dog{
        private String name;
        
        public Dog(String name){
            this.name=name;
        }
        
        public String getName(){
             return name;
         } 
}   
    
class Greyhound extends Dog{
         private String color;
         private int weight;
         
         public Greyhound(String name,String color,int weight){
             super(name);
             this.color=color;
             this.weight=weight;
         }
         
         public String getColor(){
             return color;
         }
         public int getWeight(){
             return weight;
         }
    
         
}


public class Solution { 
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String name = sc.nextLine();
        String color = sc.nextLine();
        int weight = sc.nextInt();
        Greyhound pup = new Greyhound(name, color, weight);
        System.out.println(pup.getName());
        System.out.println(pup.getColor());
        System.out.println(pup.getWeight());
        System.out.println(pup.getName()+" is "+pup.getColor()+" in color and his weight is "+pup.getWeight()+"Kg");
        System.out.println("Superclass:"+pup.getClass().getSuperclass().getName());
        
    }
}






/** BankAccount **/


import java.util.*;

class BankAccount{
    private int accountNo;
    private String name;
    private int trans;
    private int balance;
    public BankAccount(int accountNo,String name,int trans){
        this.accountNo=accountNo;
        this.name=name;
        this.trans=trans;
    }
    public int getAccountNo(){
        return accountNo;
    }
    public String getName(){
        return name;
    }
    public int gettrans(){
        return trans;
    }
    public int getBalance(){
        return balance;
    }

    public void deposit(int amt){
        balance=balance+amt;
    }
    public void withdraw(int amt){
        if (balance>=amt){
            balance=balance-amt;
        }
        else{
            System.out.println("Negative Balance Transaction Cancelled");
        }
    }
    public void display(){
        System.out.println(getAccountNo()+" "+getName()+" "+getBalance());
    }
}

public class Solution {

    public static void main(String[] args) {
        Scanner sc =new Scanner(System.in);
        int ac= Integer.parseInt(sc.nextLine());
        String n=sc.nextLine();
        int t=Integer.parseInt(sc.nextLine());
        BankAccount acc= new BankAccount(ac,n,t);
        for (int i=0;i<t;i++){
            String [] nums = sc.nextLine().split(" ");
            if (nums[0].equals("Display")){
                acc.display();
            }
            else if (nums[0].equals("Deposit")){
                acc.deposit(Integer.parseInt(nums[1]));
            }
            else{
                acc.withdraw(Integer.parseInt(nums[1]));
            }
        }
    }
}






/** Class and objects 9**/


import java.util.Scanner;

public class Solution {
    static class Person {
        private int age;

        public Person(int initialAge) {
           
            if (initialAge > 0) {
                age = initialAge;
            } else {
                System.out.println("Age is not valid, setting age to 0.");
                age = 0;
            }
        }

        public void amIOld() {
            if (age < 13) System.out.println("You are young.");
            else if (age < 18) System.out.println("You are a teenager.");
            else System.out.println("You are old.");
        }

        public void yearPasses() {
            age++;
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int T = sc.nextInt();
        for (int i = 0; i < T; i++) {
            int age = sc.nextInt();
            Person p = new Person(age);
            p.amIOld();
            for (int j = 0; j < 3; j++) {
                p.yearPasses();
            }
            p.amIOld();
            System.out.println();
        }
        sc.close();
    }
}






/**Student Normal**/


import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
 
class Student {
    private String name;
    private int rollNo;
    private String branch;
    private int year;
    private List<Integer> marks;
    private static int noOfStudents;
    
    public Student(String n, int rollNo, String branch, int year){
        this.name = n;
        this.rollNo = rollNo;
        this.branch = branch;
        this.year = year;
        marks = new ArrayList<>();
        noOfStudents++;
    }
    
    public String getName(){
        return name; 
    }
    public int getRollNo(){
        return rollNo; 
    }
    public String getBranch(){
        return branch; 
    }
    public int getYear(){
        return year; 
    }
    public List<Integer> getMarks(){
        return marks; 
    }
    public void setName(String name){
        this.name = name;
    }
    public void setMarks(int obtainedMark){
        marks.add(obtainedMark);
    }
    public void display(){
        System.out.println(rollNo+" "+name+" "+branch+" "+year);
    }
    public double computePercentage(){
        double sum = 0;
        for(Integer mark:marks){
            sum = sum + mark;
        }
        if(marks.size()==0)
            return 0;
        return sum/marks.size();
    }
    public static void displayNoStuds(){
        System.out.println("NoOfStudents="+noOfStudents);
    }
    
}
 
public class Solution {
 
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = Integer.parseInt(in.nextLine());
        List<Student> students = new ArrayList<>();
        for(int i=0;i<n;i++){
            String [] line = in.nextLine().split(" ");
            String [] nums = in.nextLine().split(" ");
            Student s = new Student(line[0],Integer.parseInt(line[1]),line[2],Integer.parseInt(line[3]));            students.add(s);
            for(int j = 0;j<nums.length;j++){
                students.get(i).setMarks(Integer.parseInt(nums[j]));
         //   students.add(s);
            }
        }
        for(int i=0;i<n;i++){
            students.get(i).display();
            System.out.print(students.get(i).getRollNo()+" ");
            System.out.printf("%.2f",students.get(i).computePercentage());
            System.out.println();
        }
        Student.displayNoStuds();
        
    }
}
